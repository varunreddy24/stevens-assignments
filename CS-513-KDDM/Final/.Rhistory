# Clear  the environment
rm(list=ls())
# Read in or load the data set "IBM_attrition_v3.csv" from canvas into R to perform analysis and modify
setwd("D:/Stevens/CS513/Final_Exam")
# Read in or load the data set "IBM_attrition_v3.csv" from canvas into R to perform analysis and modify
Attrition_DataSet <- read.csv("IBM_Attrition_v3.csv", na.string = "?")
which(is.na(Attrition_DataSet$Age))
MissingAge<-Attrition_DataSet[which(is.na(Attrition_DataSet$Age)),]
View(MissingAge)
which(is.na(Attrition_DataSet$JobSatisfaction))
MissingJobSatisfaction<-Attrition_DataSet[which(is.na(Attrition_DataSet$JobSatisfaction)),]
View(MissingJobSatisfaction)
which(is.na(Attrition_DataSet$MaritalStatus))
MissingMaritalStatus<-Attrition_DataSet[which(is.na(Attrition_DataSet$MaritalStatus)),]
View(MissingMaritalStatus)
which(is.na(Attrition_DataSet$MonthlyIncome))
MissingMonthlyIncome<-Attrition_DataSet[which(is.na(Attrition_DataSet$MonthlyIncome)),]
View(MissingMonthlyIncome)
which(is.na(Attrition_DataSet$YearsAtCompany))
MissingYearsAtCompany<-Attrition_DataSet[which(is.na(Attrition_DataSet$YearsAtCompany)),]
View(MissingYearsAtCompany)
which(is.na(Attrition_DataSet$Attrition))
MissingAttrition<-Attrition_DataSet[which(is.na(Attrition_DataSet$Attrition)),]
View(MissingAge)
Attrition_Modifed <- na.omit(Attrition_DataSet)
View(Attrition_Modifed)
Attrition_Modifed$MonthlyIncome_Categorized <- as.factor(ifelse(Attrition_Modifed$MonthlyIncome<2900, 'income1',
ifelse(Attrition_Modifed$MonthlyIncome<5000, 'income2',
ifelse(Attrition_Modifed$MonthlyIncome<8500, 'income3', 'income4'))))
# View the data set after categorization
View(Attrition_Modifed)
Attrition_Modifed$YearsAtCompany_Categorized <- as.factor(ifelse(Attrition_Modifed$YearsAtCompany<7, 'not-senior','senior'))
View(Attrition_Modifed)
Attrition_Modifed$Age_Categorized <- as.factor(ifelse(Attrition_Modifed$Age<38, 'young','mature'))
View(Attrition_Modifed)
Attrition_Modifed <- Attrition_Modifed[ , c("JobSatisfaction","MaritalStatus","Attrition","MonthlyIncome_Categorized","YearsAtCompany_Categorized","Age_Categorized")]
View(Attrition_Modifed)
# Clear  the environment
rm(list=ls())
Attrition_DataSet <- read.csv("IBM_Attrition_v3.csv", na.string = "?")
which(is.na(Attrition_DataSet$Age))
MissingAge<-Attrition_DataSet[which(is.na(Attrition_DataSet$Age)),]
View(MissingAge)
which(is.na(Attrition_DataSet$JobSatisfaction))
MissingJobSatisfaction<-Attrition_DataSet[which(is.na(Attrition_DataSet$JobSatisfaction)),]
View(MissingJobSatisfaction)
which(is.na(Attrition_DataSet$MaritalStatus))
MissingMaritalStatus<-Attrition_DataSet[which(is.na(Attrition_DataSet$MaritalStatus)),]
View(MissingMaritalStatus)
which(is.na(Attrition_DataSet$MonthlyIncome))
MissingMonthlyIncome<-Attrition_DataSet[which(is.na(Attrition_DataSet$MonthlyIncome)),]
View(MissingMonthlyIncome)
which(is.na(Attrition_DataSet$YearsAtCompany))
MissingYearsAtCompany<-Attrition_DataSet[which(is.na(Attrition_DataSet$YearsAtCompany)),]
View(MissingYearsAtCompany)
which(is.na(Attrition_DataSet$Attrition))
MissingAttrition<-Attrition_DataSet[which(is.na(Attrition_DataSet$Attrition)),]
View(MissingAge)
Attrition_Modifed <- na.omit(Attrition_DataSet)
View(Attrition_Modifed)
Attrition_Modifed$MonthlyIncome_Categorized <- as.factor(ifelse(Attrition_Modifed$MonthlyIncome<2900, 'income1',
ifelse(Attrition_Modifed$MonthlyIncome<5000, 'income2',
ifelse(Attrition_Modifed$MonthlyIncome<8500, 'income3', 'income4'))))
Attrition_Modifed$YearsAtCompany_Categorized <- as.factor(ifelse(Attrition_Modifed$YearsAtCompany<7, 'not-senior','senior'))
Attrition_Modifed$Age_Categorized <- as.factor(ifelse(Attrition_Modifed$Age<38, 'young','mature'))
Attrition_Modifed <- Attrition_Modifed[ , c("JobSatisfaction","MaritalStatus","Attrition","MonthlyIncome_Categorized","YearsAtCompany_Categorized","Age_Categorized")]
View(Attrition_Modifed)
# Test
train_inds <- seq(1, nrow(Attrition_Modifed), 3)
View(Attrition_Modifed)
# Test
train_inds <- seq(1, nrow(Attrition_Modifed), 3)
test <- Attrition_Modifed[train_inds, ]
train <- Attrition_Modifed[-train_inds, ]
View(train)
View(test)
Attrition_Modifed$Attrition = factor(Attrition_Modifed$Attrition)
library(C50)
train$Attrition<-as.factor(train$Attrition)
str(train$Attrition)
C50_class <- C5.0(Attrition~.,data=train)
C50_predict<-predict( C50_class ,test , type="class" )
table(actual=test$Attrition,C50=C50_predict)
c50_wrong<- (test$Attrition!=C50_predict)
c50_errorRate<-sum(c50_wrong)/length(test$Attrition)
c50_errorRate
c50_accuracy <- 1-c50_errorRate
c50_accuracy
